apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-service
  labels:
    app: nginx-ingress
    #app.kubernetes.io/name: vote
    #app.kubernetes.io/part-of: vote
  #namespace: vote

  annotations:
    kubernetes.io/ingress.class: nginx
    #nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/add-base-url : "true"
    #nginx.ingress.kubernetes.io/configuration-snippet: |
    #cert-manager.io/cluster-issuer: "test-selfsigned"
     #alias /;
  # location / {root /};
    # UPDATE THIS LINE ABOVE
spec:
  tls:
    - hosts:
      - ingress.example.com
      - vote.s48.su
      - result.s48.su
      secretName: tls-key-pair-combo
  rules:
    - host: vote.s48.su
      http:
        paths:
          # - path: /?(.*)
          - path: /
          # UPDATE THIS LINE ABOVE
            backend:
              serviceName: vote
              servicePort: 80
    - host: result.s48.su
      http:
         paths:
           # - path: /?(.*)
           - path: /
           # UPDATE THIS LINE ABOVE
             backend:
               serviceName: result
               servicePort: 80

---

kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: "true"
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app: nginx-ingress
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
